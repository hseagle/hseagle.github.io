<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PG逻辑复制 on PG极简运维</title>
    <link>https://hseagle.github.io/tags/pg%E9%80%BB%E8%BE%91%E5%A4%8D%E5%88%B6/</link>
    <description>Recent content in PG逻辑复制 on PG极简运维</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>CC BY 4.0 CN</copyright>
    <lastBuildDate>Wed, 03 Nov 2021 12:13:49 +0800</lastBuildDate>
    
        <atom:link href="https://hseagle.github.io/tags/pg%E9%80%BB%E8%BE%91%E5%A4%8D%E5%88%B6/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Debezium同步PostgreSQL数据到Kafka</title>
      <link>https://hseagle.github.io/2021/11/pg-debezium/</link>
      <pubDate>Wed, 03 Nov 2021 12:13:49 +0800</pubDate>
      
      <guid>https://hseagle.github.io/2021/11/pg-debezium/</guid>
      <description>&lt;p&gt;Debezium是一款非常活跃的数据同步工具， 本文介绍如何基于Kafka Connect和Debezium将PostgreSQL中的数据同步复制到Kafka.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PostgreSQL故障排查 -- 磁盘写满, autovacuum不香了</title>
      <link>https://hseagle.github.io/2021/10/pg-autovacuum-failed/</link>
      <pubDate>Tue, 12 Oct 2021 20:19:10 +0800</pubDate>
      
      <guid>https://hseagle.github.io/2021/10/pg-autovacuum-failed/</guid>
      <description>&lt;p&gt;PostgreSQL运维中，遇到一两个没预期到故障，应该不是难事:(，比如这两天就刚解决掉一个磁盘无故写爆的案例。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PostgreSQL应用开发之一 -- 爬取上市公司概况数据</title>
      <link>https://hseagle.github.io/2021/10/pg-app-stock/</link>
      <pubDate>Sun, 10 Oct 2021 15:20:43 +0800</pubDate>
      
      <guid>https://hseagle.github.io/2021/10/pg-app-stock/</guid>
      <description>&lt;p&gt;psycopg2是PostgreSQL非常好的Python Client Library, 本文通过爬取上市公司的基础数据来演示如何使用&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PostgreSQL Server常用配置</title>
      <link>https://hseagle.github.io/2021/10/pg-server-config/</link>
      <pubDate>Sun, 10 Oct 2021 10:14:49 +0800</pubDate>
      
      <guid>https://hseagle.github.io/2021/10/pg-server-config/</guid>
      <description>&lt;p&gt;PostgreSQL常用配置简要说明&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PostgreSQL HA方案之Patroni[raft]篇</title>
      <link>https://hseagle.github.io/2021/10/pg-patroni-raft/</link>
      <pubDate>Sat, 09 Oct 2021 15:07:05 +0800</pubDate>
      
      <guid>https://hseagle.github.io/2021/10/pg-patroni-raft/</guid>
      <description>&lt;p&gt;Patroni是PostgreSQL可选的高可用方案中接受度最广的一种，特别是在2.0之后，Patroni可以使用raft协议来解决分布式的一致性问题，减少了对etcd或zookeeper的依赖，大大简化了安装和运维, 本篇介绍如何基于raft来构建一个最简单的HA集群。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PostgreSQL中的数据膨胀由来及对策</title>
      <link>https://hseagle.github.io/2021/08/pg-mvcc/</link>
      <pubDate>Sat, 14 Aug 2021 14:19:10 +0800</pubDate>
      
      <guid>https://hseagle.github.io/2021/08/pg-mvcc/</guid>
      <description>&lt;p&gt;PostgreSQL是一款MVCC数据库，它的实现机制不同于Oracle和MySQL中的MVCC实现。PG中的实现机制好处是更新和删除效率高，速度快; 负面的效果是需要定期进行数据清理，不然会有数据大量的数据膨胀。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pgbench使用初步</title>
      <link>https://hseagle.github.io/2021/08/pg-pgbench/</link>
      <pubDate>Sun, 08 Aug 2021 15:24:11 +0800</pubDate>
      
      <guid>https://hseagle.github.io/2021/08/pg-pgbench/</guid>
      <description>&lt;p&gt;pgbench是postgresql进行压测的官方工具，熟悉这一工具的使用，对于后续数据库侧配置参数修改带来的影响，提供了客观的数据参考。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PG死锁检测</title>
      <link>https://hseagle.github.io/2021/07/pg-locks/</link>
      <pubDate>Wed, 07 Jul 2021 19:27:56 +0800</pubDate>
      
      <guid>https://hseagle.github.io/2021/07/pg-locks/</guid>
      <description>&lt;p&gt;PostgreSQL中锁机制及其原理&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Patroni--首选的PG HA方案</title>
      <link>https://hseagle.github.io/2021/07/patroni/</link>
      <pubDate>Mon, 05 Jul 2021 16:20:43 +0800</pubDate>
      
      <guid>https://hseagle.github.io/2021/07/patroni/</guid>
      <description>&lt;p&gt;PostgreSQL有多种高可用的方案选择，在功能性和易用性两者平衡的角度来看, Patroni无疑是最成功的一款，本节会主要介绍一下patroni的安装配置和其背后基本原理。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Citus扩展</title>
      <link>https://hseagle.github.io/2021/07/pg-extension-citus/</link>
      <pubDate>Mon, 05 Jul 2021 16:14:46 +0800</pubDate>
      
      <guid>https://hseagle.github.io/2021/07/pg-extension-citus/</guid>
      <description>&lt;p&gt;Citus是PostgreSQL目前已知水平扩容的插件中最成功的一款， 而且在2019年微软收购了该公司，足以证明该扩展的成功和流行，收购后citus的功能依然保持开源，所以这是一款值得使用并同时值得花时间研究的软件。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SQL查询性能优化</title>
      <link>https://hseagle.github.io/2021/07/pg-sql-optimization/</link>
      <pubDate>Mon, 05 Jul 2021 14:29:27 +0800</pubDate>
      
      <guid>https://hseagle.github.io/2021/07/pg-sql-optimization/</guid>
      <description>&lt;p&gt;SQL查询性能优化方法汇总&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PG远程链接</title>
      <link>https://hseagle.github.io/2021/07/pg-remote-access/</link>
      <pubDate>Mon, 05 Jul 2021 13:14:49 +0800</pubDate>
      
      <guid>https://hseagle.github.io/2021/07/pg-remote-access/</guid>
      <description>&lt;p&gt;PostgreSQL需要进行简单的配置才能允许用户从远程进行链接，本节会讲述涉及到的主要步骤。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PostgreSQL安装和运行</title>
      <link>https://hseagle.github.io/2021/07/pg-install/</link>
      <pubDate>Mon, 05 Jul 2021 12:43:24 +0800</pubDate>
      
      <guid>https://hseagle.github.io/2021/07/pg-install/</guid>
      <description>&lt;p&gt;本节涉及PostgreSQL的安装和运行， PostgreSQL历史悠久，Linux的各大发行版都对其支持友好，基本上都有编译好的二进制包直接可供下载安装。如果想亲自体验一下PostgreSQL的源码编译过程，那么就下载源码进行DIY，过程也不复杂。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PG的明天值得期待</title>
      <link>https://hseagle.github.io/2021/07/my-first-post/</link>
      <pubDate>Mon, 05 Jul 2021 12:23:19 +0800</pubDate>
      
      <guid>https://hseagle.github.io/2021/07/my-first-post/</guid>
      <description>&lt;p&gt;数据库过去是，现在是，将来肯定也是互联网技术中的热点和重点( &lt;strong&gt;有押注的意味&lt;/strong&gt; ), 在开源数据中，以功能论PostgreSQL无疑是最强的，自从2014年以来，在db-engines.com排名中始终稳定在第4,声誉积分不断抬升，和SqlServer积分不断下滑趋势相比，很有可能在2-3年后， PostgreSQL会进入排名的top3。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
